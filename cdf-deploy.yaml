apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: worker
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: worker
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      volumes:
      - name: google-cloud-key
        secret:
          secretName: worker-key
      containers:
      - name: worker
        image: eu.gcr.io/college-de-france/worker:prod-v1.2.0
        resources:
          requests:
            cpu: "50m"
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        command: ["go-wrapper"]
        args: ["run", "--project_id=college-de-france", "--bucket=healthy-cycle-9484", "--sox_path=sox", "--elastic_address=http://elasticsearch:9200"]
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      securityContext:
        # Same group as elastic user at to be able to read/write the mounted volume.
        fsGroup: 1000
      initContainers:
        - name: init-sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      volumes:
        - name: es-persistent-storage
          gcePersistentDisk:
            pdName: es-disk
            fsType: ext4
        - name: es-license-key
          secret:
            secretName: es-license
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
        command: ["bin/elasticsearch"]
        args: ["-Epath.data=/var/data/elasticsearch", "-Expack.security.enabled=false", "-Ecluster.name=esdb", "-Enode.name=master-data-node", "-Enetwork.host=0.0.0.0", "-Ebootstrap.memory_lock=true", "-Ediscovery.zen.minimum_master_nodes=1", "-Ediscovery.type=single-node"]
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        resources:
          requests:
            memory: "2.5Gi"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        volumeMounts:
        - name: es-persistent-storage
          mountPath: /var/data/elasticsearch
        - name: es-license-key
          mountPath: /var/secrets/license
